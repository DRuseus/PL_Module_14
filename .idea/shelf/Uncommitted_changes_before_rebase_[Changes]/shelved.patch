Index: module_14_3/api_key.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module_14_3/api_key.py b/module_14_3/api_key.py
new file mode 100644
--- /dev/null	(date 1730488481519)
+++ b/module_14_3/api_key.py	(date 1730488481519)
@@ -0,0 +1,1 @@
+API = '7616865449:AAEqDgfsIBoCUC44bW0yOW4DrXlIybORiac'
\ No newline at end of file
Index: module_14_3/module_14_3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module_14_3/module_14_3.py b/module_14_3/module_14_3.py
new file mode 100644
--- /dev/null	(date 1730488489544)
+++ b/module_14_3/module_14_3.py	(date 1730488489544)
@@ -0,0 +1,185 @@
+import asyncio
+import logging
+
+from aiogram import Bot, Dispatcher, F
+from aiogram.filters.command import CommandStart
+from aiogram.filters.state import State, StatesGroup
+from aiogram.fsm.context import FSMContext
+from aiogram.fsm.storage.memory import MemoryStorage
+from aiogram.types import ReplyKeyboardMarkup
+from aiogram.utils.keyboard import CallbackData
+from aiogram.utils.keyboard import InlineKeyboardMarkup, InlineKeyboardButton
+from aiogram.utils.keyboard import KeyboardButton
+from aiogram.types.input_file import FSInputFile
+
+from api_key import API
+
+
+class UserState(StatesGroup):
+    age = State()
+    growth = State()
+    weight = State()
+
+
+# Собственный фильтр, который пришлось создать, чтоб InlineKeyboardButton мог перехватываться
+class MyFilter(CallbackData, prefix='my'):
+    action: str
+
+
+bot = Bot(token=API)
+dp = Dispatcher(storage=MemoryStorage())
+# Files
+prod_1_img = FSInputFile('prod_1.png')
+prod_2_img = FSInputFile('prod_2.png')
+prod_3_img = FSInputFile('prod_3.png')
+prod_4_img = FSInputFile('prod_4.png')
+# Button
+start_button_1 = KeyboardButton(text='Расчёт нормы калорий')
+info_button = KeyboardButton(text='Информация о боте')
+buy_button = KeyboardButton(text='Купить товар')
+il_button_calc = InlineKeyboardButton(text='Начать расчёт', callback_data=MyFilter(action='start').pack())
+il_button_info = InlineKeyboardButton(text='Формула расчёта',
+                                      callback_data=MyFilter(action='formula').pack())
+il_but_product_1 = InlineKeyboardButton(text='Продукт №1', callback_data=MyFilter(action='prod_1').pack())
+il_but_product_2 = InlineKeyboardButton(text='Продукт №2', callback_data=MyFilter(action='prod_2').pack())
+il_but_product_3 = InlineKeyboardButton(text='Продукт №3', callback_data=MyFilter(action='prod_3').pack())
+il_but_product_4 = InlineKeyboardButton(text='Продукт №4', callback_data=MyFilter(action='prod_4').pack())
+# Keyboard
+il_markup_1 = InlineKeyboardMarkup(inline_keyboard=[[il_button_calc, il_button_info]])
+il_markup_2 = InlineKeyboardMarkup(inline_keyboard=[[il_button_calc]])
+il_prod_menu = InlineKeyboardMarkup(inline_keyboard=[[il_but_product_1, il_but_product_2],
+                                                     [il_but_product_3, il_but_product_4]])
+markup_1 = ReplyKeyboardMarkup(keyboard=[[start_button_1, info_button],
+                                         [buy_button]], resize_keyboard=True, one_time_keyboard=True)
+
+
+
+@dp.callback_query(MyFilter.filter(F.action == 'formula'))
+async def formula(call):
+    logging.info(f'Пользователь {call.message.from_user.full_name} ввёл {call.message.text}')
+    await call.message.answer('Формула Миффлина-Сан Жеора\n'
+                              'Для мужчин: 10 х вес (кг) + 6,25 x рост (см) – 5 х возраст (г) + 5\n'
+                              'Для женщин: 10 x вес (кг) + 6,25 x рост (см) – 5 x возраст (г) – 161',
+                              reply_markup=il_markup_2)
+    await call.answer()
+
+
+@dp.callback_query(MyFilter.filter(F.action == 'start'))
+async def start_calc(call, state: FSMContext):
+    logging.info(f'Пользователь {call.message.from_user.full_name} ввёл {call.message.text}')
+    await state.set_state(UserState.age)
+    await call.message.answer('Введите свой возраст в полных годах:')
+    await call.answer()
+
+
+@dp.callback_query(MyFilter.filter(F.action == 'prod_1'))
+async def confirm_buying_product_1(call):
+    await call.message.answer_photo(prod_1_img, 'Вы успешно приобрели продукт №1!')
+    await call.answer()
+
+@dp.callback_query(MyFilter.filter(F.action == 'prod_2'))
+async def confirm_buying_product_2(call):
+    await call.message.answer_photo(prod_2_img, 'Вы успешно приобрели продукт №2!')
+    await call.answer()
+
+@dp.callback_query(MyFilter.filter(F.action == 'prod_3'))
+async def confirm_buying_product_3(call):
+    await call.message.answer_photo(prod_3_img, 'Вы успешно приобрели продукт №3!')
+    await call.answer()
+
+@dp.callback_query(MyFilter.filter(F.action == 'prod_4'))
+async def confirm_buying_product_4(call):
+    await call.message.answer_photo(prod_4_img, 'Вы успешно приобрели продукт №4!')
+    await call.answer()
+
+
+@dp.message(F.text == 'Купить товар')
+async def get_buying_list(message):
+    # await message.answer('Название: Продукт №1 | Описание: Дешман, но норм | Цена: 100р')
+    # await message.answer('Название: Продукт №2 | Описание: Бестселлер | Цена: 200р')
+    # await message.answer('Название: Продукт №3 | Описание: Улучшеный состав | Цена: 300р')
+    # await message.answer('Название: Продукт №4 | Описание: Элитный товар | Цена: 400р')
+    await message.answer_photo(prod_1_img, 'Название: Продукт №1 | Описание: Дешман, но норм | Цена: 100р')
+    await message.answer_photo(prod_2_img, 'Название: Продукт №2 | Описание: Бестселлер | Цена: 200р')
+    await message.answer_photo(prod_3_img, 'Название: Продукт №3 | Описание: Улучшеный состав | Цена: 300р')
+    await message.answer_photo(prod_4_img, 'Название: Продукт №4 | Описание: Элитный товар | Цена: 400р')
+    await message.answer('Выберите продукт для покупки:', reply_markup=il_prod_menu)
+
+
+@dp.message(F.text == 'Информация о боте')
+async def get_info(message):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await message.answer(
+        'Это телеграм-бот, который поможет тебе правильно питаться и поддерживать здоровый образ жизни.\n'
+        'Выберете опцию:',
+        reply_markup=il_markup_1)
+
+
+@dp.message(CommandStart())
+async def start(message):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await message.answer(f'Привет, {message.from_user.username}! Я бот, помогающий твоему здоровью.\n',
+                         reply_markup=markup_1)
+
+
+@dp.message(F.text.contains('нормы калорий'))
+async def set_age(message, state: FSMContext):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await state.set_state(UserState.age)
+    await message.answer('Выберите опцию:', reply_markup=il_markup_1)
+
+
+@dp.message(UserState.age)
+async def set_growth(message, state: FSMContext):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await state.update_data(age=float(message.text))
+    await state.set_state(UserState.growth)
+    await message.answer('Введите свой рост в сантиметрах:')
+
+
+@dp.message(UserState.growth)
+async def set_weight(message, state: FSMContext):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await state.update_data(growth=float(message.text))
+    await state.set_state(UserState.weight)
+    await message.answer('Введите свой вес в килограммах:')
+
+
+@dp.message(UserState.weight)
+async def send_calories(message, state: FSMContext):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await state.update_data(weight=float(message.text))
+    data = await state.get_data()
+    age = data['age']
+    growth = data['growth']
+    weight = data['weight']
+    await message.answer(f'Если вы мужчина то ваша норма калорий в день составляет:\n'
+                         f'{10 * weight + 6.25 * growth + 5 * age + 5}\n'
+                         f'А если в женщина, то ваша дневная норма калорий:\n'
+                         f'{10 * weight + 6.25 * growth + 5 * age - 161}')
+    await state.clear()
+
+
+@dp.message(F.text.lower().in_({'спасибо', 'благодар', 'спс','спасибо большое','большое спасибо','благодарочка',
+                                'сяб','от души','круто','нифига себе',"класс","классно","неплохо",
+                                "премного благодарю","спасибочки","спасибо вам",
+                                }))
+async def all_messages(message):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await message.answer(f'Всегда пожалуйста!')
+
+
+@dp.message()
+async def all_messages(message):
+    logging.info(f'Пользователь {message.from_user.full_name} ввёл {message.text}')
+    await message.answer('Введите команду /start, чтобы начать общение.')
+
+
+async def main() -> None:
+    logging.basicConfig(filename='t_bot.log', filemode='w', level=logging.INFO, encoding='utf-8',
+                        format='%(asctime)s, %(levelname)s, %(message)s')
+    await dp.start_polling(bot)
+
+
+if __name__ == "__main__":
+    asyncio.run(main())
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8ae5e553-3e22-45c2-b431-141c5f0fc1dd\" name=\"Changes\" comment=\"Фикс\">\r\n      <change afterPath=\"$PROJECT_DIR$/module_14_2/__init__.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/module_14_2/module_14_2.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;DRuseus&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/DRuseus/PL_Module_14.git&quot;,\r\n    &quot;accountId&quot;: &quot;61f6ea7f-e0ac-4c72-91de-b0a6a5d098d1&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2oCPZzYWbCYv44CoFNgke65XnGp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.data_base.executor\": \"Run\",\r\n    \"Python.module_14_1.executor\": \"Run\",\r\n    \"Python.module_14_2.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"D:/PyProjects/PL_Module_14\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\PyProjects\\PL_Module_14\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-975db3bf15a3-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18034.82\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8ae5e553-3e22-45c2-b431-141c5f0fc1dd\" name=\"Changes\" comment=\"\" />\r\n      <created>1730370643368</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1730370643368</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Фикс\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730378905974</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730378905974</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Фикс\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Фикс\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 91ad67f03dd7ac6300517b8da9397c8bc9d40fa7)
+++ b/.idea/workspace.xml	(date 1730487815530)
@@ -4,9 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="8ae5e553-3e22-45c2-b431-141c5f0fc1dd" name="Changes" comment="Фикс">
-      <change afterPath="$PROJECT_DIR$/module_14_2/__init__.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/module_14_2/module_14_2.py" afterDir="false" />
+    <list default="true" id="8ae5e553-3e22-45c2-b431-141c5f0fc1dd" name="Changes" comment="Выполнено домашнее задание по теме &quot;Выбор элементов и функции в SQL запросах&quot;">
+      <change afterPath="$PROJECT_DIR$/module_14_3/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/api_key.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/module_14_3.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/prod_1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/prod_2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/prod_3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/module_14_3/prod_4.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -52,13 +57,15 @@
     "Python.data_base.executor": "Run",
     "Python.module_14_1.executor": "Run",
     "Python.module_14_2.executor": "Run",
+    "Python.module_14_3.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "master",
-    "last_opened_file_path": "D:/PyProjects/PL_Module_14"
+    "last_opened_file_path": "D:/PyProjects/PL_Module_14/module_14_3"
   }
 }]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\PyProjects\PL_Module_14\module_14_3" />
       <recent name="D:\PyProjects\PL_Module_14" />
     </key>
   </component>
@@ -86,11 +93,20 @@
       <option name="project" value="LOCAL" />
       <updated>1730378905974</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Выполнено домашнее задание по теме &quot;Выбор элементов и функции в SQL запросах&quot;">
+      <option name="closed" value="true" />
+      <created>1730471466825</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1730471466825</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Фикс" />
-    <option name="LAST_COMMIT_MESSAGE" value="Фикс" />
+    <MESSAGE value="Выполнено домашнее задание по теме &quot;Выбор элементов и функции в SQL запросах&quot;" />
+    <option name="LAST_COMMIT_MESSAGE" value="Выполнено домашнее задание по теме &quot;Выбор элементов и функции в SQL запросах&quot;" />
   </component>
 </project>
\ No newline at end of file
diff --git a/module_14_3/__init__.py b/module_14_3/__init__.py
new file mode 100644
